//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StepWars.BattleArena.GameService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerDTO", Namespace="http://schemas.datacontract.org/2004/07/StepWars.BusinessLogic.Clasess.DTO")]
    [System.SerializableAttribute()]
    public partial class PlayerDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AdminRulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StepWars.BattleArena.GameService.StarShipDTO ShipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdminRules {
            get {
                return this.AdminRulesField;
            }
            set {
                if ((this.AdminRulesField.Equals(value) != true)) {
                    this.AdminRulesField = value;
                    this.RaisePropertyChanged("AdminRules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StepWars.BattleArena.GameService.StarShipDTO Ship {
            get {
                return this.ShipField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipField, value) != true)) {
                    this.ShipField = value;
                    this.RaisePropertyChanged("Ship");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StarShipDTO", Namespace="http://schemas.datacontract.org/2004/07/StepWars.BusinessLogic.Clasess.DTO")]
    [System.SerializableAttribute()]
    public partial class StarShipDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StepWars.BattleArena.GameService.BonusDTO BonusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DamageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HealthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpeedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StepWars.BattleArena.GameService.BonusDTO Bonus {
            get {
                return this.BonusField;
            }
            set {
                if ((object.ReferenceEquals(this.BonusField, value) != true)) {
                    this.BonusField = value;
                    this.RaisePropertyChanged("Bonus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Damage {
            get {
                return this.DamageField;
            }
            set {
                if ((this.DamageField.Equals(value) != true)) {
                    this.DamageField = value;
                    this.RaisePropertyChanged("Damage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Health {
            get {
                return this.HealthField;
            }
            set {
                if ((this.HealthField.Equals(value) != true)) {
                    this.HealthField = value;
                    this.RaisePropertyChanged("Health");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BonusDTO", Namespace="http://schemas.datacontract.org/2004/07/StepWars.BusinessLogic.Clasess.DTO")]
    [System.SerializableAttribute()]
    public partial class BonusDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MoveDirection", Namespace="http://schemas.datacontract.org/2004/07/StepWars.BusinessLogic.Contracts")]
    public enum MoveDirection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Up = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Down = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Left = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Right = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DrawObjectDTO", Namespace="http://schemas.datacontract.org/2004/07/StepWars.BusinessLogic.Clasess.DTO")]
    [System.SerializableAttribute()]
    public partial class DrawObjectDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int X_PosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Y_PosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int X_Pos {
            get {
                return this.X_PosField;
            }
            set {
                if ((this.X_PosField.Equals(value) != true)) {
                    this.X_PosField = value;
                    this.RaisePropertyChanged("X_Pos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Y_Pos {
            get {
                return this.Y_PosField;
            }
            set {
                if ((this.Y_PosField.Equals(value) != true)) {
                    this.Y_PosField = value;
                    this.RaisePropertyChanged("Y_Pos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameService.IGameControllerContract", CallbackContract=typeof(StepWars.BattleArena.GameService.IGameControllerContractCallback))]
    public interface IGameControllerContract {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameControllerContract/AddNewPlayer")]
        void AddNewPlayer(StepWars.BattleArena.GameService.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameControllerContract/AddNewPlayer")]
        System.Threading.Tasks.Task AddNewPlayerAsync(StepWars.BattleArena.GameService.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameControllerContract/MovePlayer", ReplyAction="http://tempuri.org/IGameControllerContract/MovePlayerResponse")]
        void MovePlayer(StepWars.BattleArena.GameService.PlayerDTO player, StepWars.BattleArena.GameService.MoveDirection direction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameControllerContract/MovePlayer", ReplyAction="http://tempuri.org/IGameControllerContract/MovePlayerResponse")]
        System.Threading.Tasks.Task MovePlayerAsync(StepWars.BattleArena.GameService.PlayerDTO player, StepWars.BattleArena.GameService.MoveDirection direction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameControllerContract/Shoot", ReplyAction="http://tempuri.org/IGameControllerContract/ShootResponse")]
        void Shoot(StepWars.BattleArena.GameService.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameControllerContract/Shoot", ReplyAction="http://tempuri.org/IGameControllerContract/ShootResponse")]
        System.Threading.Tasks.Task ShootAsync(StepWars.BattleArena.GameService.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameControllerContract/RemovePlayer")]
        void RemovePlayer(StepWars.BattleArena.GameService.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameControllerContract/RemovePlayer")]
        System.Threading.Tasks.Task RemovePlayerAsync(StepWars.BattleArena.GameService.PlayerDTO player);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameControllerContractCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameControllerContract/Redraw")]
        void Redraw(StepWars.BattleArena.GameService.DrawObjectDTO[] DrawObjects, StepWars.BattleArena.GameService.PlayerDTO playerInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameControllerContractChannel : StepWars.BattleArena.GameService.IGameControllerContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameControllerContractClient : System.ServiceModel.DuplexClientBase<StepWars.BattleArena.GameService.IGameControllerContract>, StepWars.BattleArena.GameService.IGameControllerContract {
        
        public GameControllerContractClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GameControllerContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GameControllerContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameControllerContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameControllerContractClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void AddNewPlayer(StepWars.BattleArena.GameService.PlayerDTO player) {
            base.Channel.AddNewPlayer(player);
        }
        
        public System.Threading.Tasks.Task AddNewPlayerAsync(StepWars.BattleArena.GameService.PlayerDTO player) {
            return base.Channel.AddNewPlayerAsync(player);
        }
        
        public void MovePlayer(StepWars.BattleArena.GameService.PlayerDTO player, StepWars.BattleArena.GameService.MoveDirection direction) {
            base.Channel.MovePlayer(player, direction);
        }
        
        public System.Threading.Tasks.Task MovePlayerAsync(StepWars.BattleArena.GameService.PlayerDTO player, StepWars.BattleArena.GameService.MoveDirection direction) {
            return base.Channel.MovePlayerAsync(player, direction);
        }
        
        public void Shoot(StepWars.BattleArena.GameService.PlayerDTO player) {
            base.Channel.Shoot(player);
        }
        
        public System.Threading.Tasks.Task ShootAsync(StepWars.BattleArena.GameService.PlayerDTO player) {
            return base.Channel.ShootAsync(player);
        }
        
        public void RemovePlayer(StepWars.BattleArena.GameService.PlayerDTO player) {
            base.Channel.RemovePlayer(player);
        }
        
        public System.Threading.Tasks.Task RemovePlayerAsync(StepWars.BattleArena.GameService.PlayerDTO player) {
            return base.Channel.RemovePlayerAsync(player);
        }
    }
}
