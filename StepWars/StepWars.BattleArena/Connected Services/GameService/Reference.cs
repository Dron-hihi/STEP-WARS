//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StepWars.BattleArena.GameService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameService.IGameControllerContract", CallbackContract=typeof(StepWars.BattleArena.GameService.IGameControllerContractCallback))]
    public interface IGameControllerContract {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameControllerContract/AddNewPlayer")]
        void AddNewPlayer(StepWars.BusinessLogic.Clasess.DTO.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameControllerContract/AddNewPlayer")]
        System.Threading.Tasks.Task AddNewPlayerAsync(StepWars.BusinessLogic.Clasess.DTO.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameControllerContract/MovePlayer", ReplyAction="http://tempuri.org/IGameControllerContract/MovePlayerResponse")]
        void MovePlayer(StepWars.BusinessLogic.Clasess.DTO.PlayerDTO player, StepWars.BusinessLogic.Contracts.MoveDirection direction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameControllerContract/MovePlayer", ReplyAction="http://tempuri.org/IGameControllerContract/MovePlayerResponse")]
        System.Threading.Tasks.Task MovePlayerAsync(StepWars.BusinessLogic.Clasess.DTO.PlayerDTO player, StepWars.BusinessLogic.Contracts.MoveDirection direction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameControllerContract/Shoot", ReplyAction="http://tempuri.org/IGameControllerContract/ShootResponse")]
        void Shoot(StepWars.BusinessLogic.Clasess.DTO.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameControllerContract/Shoot", ReplyAction="http://tempuri.org/IGameControllerContract/ShootResponse")]
        System.Threading.Tasks.Task ShootAsync(StepWars.BusinessLogic.Clasess.DTO.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameControllerContract/RemovePlayer")]
        void RemovePlayer(StepWars.BusinessLogic.Clasess.DTO.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameControllerContract/RemovePlayer")]
        System.Threading.Tasks.Task RemovePlayerAsync(StepWars.BusinessLogic.Clasess.DTO.PlayerDTO player);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameControllerContractCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameControllerContract/Redraw")]
        void Redraw(StepWars.BusinessLogic.Clasess.DTO.DrawObjectDTO[] DrawObjects, StepWars.BusinessLogic.Clasess.DTO.PlayerDTO playerInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameControllerContractChannel : StepWars.BattleArena.GameService.IGameControllerContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameControllerContractClient : System.ServiceModel.DuplexClientBase<StepWars.BattleArena.GameService.IGameControllerContract>, StepWars.BattleArena.GameService.IGameControllerContract {
        
        public GameControllerContractClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GameControllerContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GameControllerContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameControllerContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameControllerContractClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void AddNewPlayer(StepWars.BusinessLogic.Clasess.DTO.PlayerDTO player) {
            base.Channel.AddNewPlayer(player);
        }
        
        public System.Threading.Tasks.Task AddNewPlayerAsync(StepWars.BusinessLogic.Clasess.DTO.PlayerDTO player) {
            return base.Channel.AddNewPlayerAsync(player);
        }
        
        public void MovePlayer(StepWars.BusinessLogic.Clasess.DTO.PlayerDTO player, StepWars.BusinessLogic.Contracts.MoveDirection direction) {
            base.Channel.MovePlayer(player, direction);
        }
        
        public System.Threading.Tasks.Task MovePlayerAsync(StepWars.BusinessLogic.Clasess.DTO.PlayerDTO player, StepWars.BusinessLogic.Contracts.MoveDirection direction) {
            return base.Channel.MovePlayerAsync(player, direction);
        }
        
        public void Shoot(StepWars.BusinessLogic.Clasess.DTO.PlayerDTO player) {
            base.Channel.Shoot(player);
        }
        
        public System.Threading.Tasks.Task ShootAsync(StepWars.BusinessLogic.Clasess.DTO.PlayerDTO player) {
            return base.Channel.ShootAsync(player);
        }
        
        public void RemovePlayer(StepWars.BusinessLogic.Clasess.DTO.PlayerDTO player) {
            base.Channel.RemovePlayer(player);
        }
        
        public System.Threading.Tasks.Task RemovePlayerAsync(StepWars.BusinessLogic.Clasess.DTO.PlayerDTO player) {
            return base.Channel.RemovePlayerAsync(player);
        }
    }
}
